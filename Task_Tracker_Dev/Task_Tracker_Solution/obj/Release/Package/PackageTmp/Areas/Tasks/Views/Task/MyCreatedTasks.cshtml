@model IEnumerable<Task_Tracker_CommonLibrary.DomainModels.TaskDM>
@using Task_Tracker_CommonLibrary.DomainModels
@using Task_Tracker_CommonLibrary.Utility
@using Task_Tracker_CommonLibrary.Others
@{
    ViewBag.Title = "Tasks Created By Me";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="pe-7s-note2 icon-gradient bg-premium-dark">
                </i>
            </div>
            <div>Tasks Created By Me</div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="main-card mb-3 card">
            <div class="card-body pt-2">
                @{
                    Html.RenderPartial("_SearchControl", new SearchDTO { actionName = "MyCreatedTasks" });
                }
                <div class="table-responsive">
                    <table class="mb-0 table table-bordered createdbymetbl">
                        <tr>
                            <th>Sr No.</th>
                            @*<th>Priority</th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.task_subject)
                            </th>
                            @*<th>
                            @Html.DisplayNameFor(model => model.task_reference)
                        </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.project.project_name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.module.module_name)
                            </th>

                            @*<th>
                            @Html.DisplayNameFor(model => model.owner)
                        </th>*@

                            <th class="text-center">Status</th>
                            <th>
                                @Html.DisplayNameFor(model => model.target_date)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.progress)
                            </th>
                            <th class="text-center">Parent Task</th>
                            <th class="text-center">SubTask</th>
                            <th class="text-center">Weightage</th>
                            <th class="text-center">Created On</th>
                        </tr>
                        @if (Model != null && Model.Count() > 0)
                        {
                            var cnt = 0;
                            foreach (var item in Model)
                            {
                                cnt = cnt + 1;
                                <tr>
                                    <td>
                                        @cnt
                                        @if (@item.priority != null)
                                        {
                                            <i class="@item.priority.priority_icon" title="@item.priority.priority_name"></i>
                                        }
                                    </td>
                                    <td>
                                        @Html.ActionLink(item.task_subject, "ViewTask", new { id = item.task_syscode.ToString().Base64Encode() })
                                    </td>
                                    @*<td>
                                    @Html.ActionLink(@Html.DisplayFor(modelItem => item.task_subject).ToString(), "ViewTask", new { id = item.task_syscode.ToString().Base64Encode() })
                                </td>*@
                                    @*<td class="text-center">
                                    @if (@item.priority != null)
                                    {
                                        <i class="@item.priority.priority_icon" title="@item.priority.priority_name"></i>
                                    }
                                </td>*@
                                    @*<td class="text-center text-muted">
                                    @Html.ActionLink(@Html.DisplayFor(modelItem => item.task_reference).ToString(), "ViewTask", new { id = item.task_syscode.ToString().Base64Encode() })
                                    @Html.HiddenFor(modelItem => item.task_syscode)
                                </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.project.project_name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.module.module_name)
                                    </td>

                                    @*<td>
                                    @Html.DisplayFor(modelItem => item.owner)
                                </td>*@
                                    <td class="text-center">
                                        <div class="@item.status.status_icon">
                                            @Html.DisplayFor(modelItem => item.status.status_name)
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.target_date)
                                    </td>
                                    <td class="text-center">
                                        @if (item.module_syscode > 0)
                                        {
                                            <div class="widget-content p-0">
                                                <div class="widget-content-outer">
                                                    <div class="widget-content-wrapper">
                                                        <div class="widget-content-left pr-2">
                                                            <div class="widget-numbers progressbar-success">
                                                                @Html.DisplayFor(modelItem => item.progress)%
                                                            </div>
                                                        </div>
                                                        <div class="widget-content-right w-100">
                                                            <div class="progress-bar-xs progress">
                                                                <div class="progress-bar bg-success" role="progressbar" aria-valuenow="54" aria-valuemin="0" aria-valuemax="100" style="width: @(item.progress ?? 0)%;"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        @if (item.parent_task_syscode != null)
                                        {
                                            <a title=@item.parentTaskRef class="border-0 btn-transition btn btn-outline-primary" href="@Url.Action("ViewTask", "Task" , new { id=item.parent_task_syscode.ToString().Base64Encode()})">
                                                <i class="fa fa-eye"></i>
                                            </a>
                                            //@Html.ActionLink(@Html.DisplayFor(modelItem => item.parentTaskRef).ToString(), "ViewTask", new { id = item.parent_task_syscode.ToString().Base64Encode() })
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (item.task_status_syscode == (int)Enum_Master.StatusEnum.Open || item.task_status_syscode == (int)Enum_Master.StatusEnum.InProgress)
                                        {
                                            <div class="widget-content-right">
                                                <a title=@item.parentTaskRef class="border-0 btn-transition btn btn-outline-primary" href="@Url.Action("CreateSubtask", "Task", new { id=item.task_syscode.ToString().Base64Encode() })">
                                                    <i class="fa fa-plus"></i>
                                                </a>
                                                @*To Do Later*@
                                                @*<a class="border-0 btn-transition btn btn-outline-primary" href="@Url.Action(" ViewSubtasks", "Task" , new { id=item.task_syscode.ToString().Base64Encode()})">
                                                <i class="fa fa-eye"></i>
                                            </a>*@
                                            </div>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (item.module_syscode > 0)
                                        {
                                            if ((item.task_status_syscode == (int)Enum_Master.StatusEnum.Open || item.task_status_syscode == (int)Enum_Master.StatusEnum.InProgress) && (item.parent_task_syscode != null))
                                            {
                                                <div class="widget-content-right wtgbtn">
                                                    <a href="@Url.Action("SetWeightage", "Task", new { id = item.parent_task_syscode.ToString().Base64Encode() })" class="btn btn-primary">
                                                        @Html.DisplayFor(modelItem => item.weightage)
                                                        <span class="badge badge-pill badge-light">
                                                            <i class="fa fa-plus" style="font-size:9px;"></i>
                                                        </span>
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(modelItem => item.weightage)
                                            }
                                        }
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.created_on)
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="11" style="text-align:center">
                                    No Records found!
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>